// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/[locale]/ai-tools" | "/[locale]/inventory" | "/[locale]/menus" | "/[locale]/menus/[id]/edit" | "/[locale]/menus/new" | "/[locale]/purchasing" | "/[locale]/purchasing/[id]" | "/[locale]/recipes" | "/[locale]/recipes/[id]/edit" | "/[locale]/recipes/new" | "/[locale]/reports" | "/[locale]/sales" | "/[locale]/settings" | "/[locale]/settings/allergens" | "/[locale]/settings/butchering-templates" | "/[locale]/settings/categories" | "/[locale]/settings/outlets" | "/[locale]/suppliers" | "/ai-tools" | "/inventory" | "/menus" | "/menus/[id]/edit" | "/menus/new" | "/purchasing" | "/purchasing/[id]" | "/recipes" | "/recipes/[id]/edit" | "/recipes/new" | "/reports" | "/sales" | "/settings" | "/settings/allergens" | "/settings/butchering-templates" | "/settings/categories" | "/settings/outlets" | "/suppliers"
type PageRoutes = never
type LayoutRoutes = "/" | "/[locale]"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/[locale]": { "locale": string; }
  "/[locale]/ai-tools": { "locale": string; }
  "/[locale]/inventory": { "locale": string; }
  "/[locale]/menus": { "locale": string; }
  "/[locale]/menus/[id]/edit": { "locale": string; "id": string; }
  "/[locale]/menus/new": { "locale": string; }
  "/[locale]/purchasing": { "locale": string; }
  "/[locale]/purchasing/[id]": { "locale": string; "id": string; }
  "/[locale]/recipes": { "locale": string; }
  "/[locale]/recipes/[id]/edit": { "locale": string; "id": string; }
  "/[locale]/recipes/new": { "locale": string; }
  "/[locale]/reports": { "locale": string; }
  "/[locale]/sales": { "locale": string; }
  "/[locale]/settings": { "locale": string; }
  "/[locale]/settings/allergens": { "locale": string; }
  "/[locale]/settings/butchering-templates": { "locale": string; }
  "/[locale]/settings/categories": { "locale": string; }
  "/[locale]/settings/outlets": { "locale": string; }
  "/[locale]/suppliers": { "locale": string; }
  "/ai-tools": {}
  "/inventory": {}
  "/menus": {}
  "/menus/[id]/edit": { "id": string; }
  "/menus/new": {}
  "/purchasing": {}
  "/purchasing/[id]": { "id": string; }
  "/recipes": {}
  "/recipes/[id]/edit": { "id": string; }
  "/recipes/new": {}
  "/reports": {}
  "/sales": {}
  "/settings": {}
  "/settings/allergens": {}
  "/settings/butchering-templates": {}
  "/settings/categories": {}
  "/settings/outlets": {}
  "/suppliers": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/[locale]": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
